BEGIN:VCALENDAR
BEGIN:VEVENT
SUMMARY:Pushing the Boundaries of Small Tasks: Scalable Low-Overhead Data-
 Flow Programming in TTG
DTSTART;TZID=Europe/Berlin;VALUE=DATE-TIME:20220907T143000
DTEND;TZID=Europe/Berlin;VALUE=DATE-TIME:20220907T150000
DESCRIPTION:Shared memory parallel programming models strive to provide lo
 w-overhead execution environments. Task-based programming models\, in part
 icular\, are well-suited to cope with the ubiquitous multi- and many-core 
 systems since they allow applications to express all available concurrency
  to a scheduler\, which is tasked with exploiting the available hardware r
 esources. It is general consensus that atomic operations should be preferr
 ed over locks and mutexes to avoid inter-thread serialization and the resu
 lting loss in efficiency. However\, even atomic operations may serialize t
 hreads if not used judiciously. In this work\, we will discuss several opt
 imizations applied to TTG and the underlying PaRSEC runtime system aiming 
 at removing contentious atomic operations to reduce the overhead of task m
 anagement to a few hundred clock cycles. The result is an optimized implem
 entation of data-flow programming model that seamlessly scales from a sing
 le node to distributed execution\, competing with shared-memory-only progr
 amming models such as OpenMP.
END:VEVENT
END:VCALENDAR
